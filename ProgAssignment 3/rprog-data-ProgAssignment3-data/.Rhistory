rankhospital("MD", "heart attack", 3)
rankhospital <- function(state, outcome, num) {
threshold <- "Not Available"
#checks valid state
st <- state.abb
if(!state %in% st) stop ("invalid state")
state
#checks valid outcome
out <-c("heart attack", "heart failure", "pneumonia")
if(!outcome %in% out) stop ("invalid outcome")
outcome
#read data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
#subset data by user entered state
sdata <- subset(data, State == state)
print(length(sdata))
if(outcome == "heart attack") {
colname = "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
}
if(outcome == "heart failure") {
colname = "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"
}
if(outcome == "pneumonia") {
colname = "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"
}
#remove not available rows from column pertaining to user entered outcome
sdata <- subset(sdata, sdata[,colname] != threshold)
print(length(sdata))
#first order the data by the outcome input by the user, if there are ties
#in outcome values then sort by the 2-column (Hospital.Name alphabetically)
ordersdata <- sdata[order(as.numeric(sdata[,colname]), sdata[,2]),]
print(length(ordersdata))
if(num == "best") {
num <- 1
}
if(num == "worst") {
num <- as.numeric(length(ordersdata))
print(num)
}
if(num > length(ordersdata)) {
NA
}
rank <- ordersdata[num,2]
rank
}
rankhospital("MD", "heart attack", 3)
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
sdata <- subset(data, State == MD)
sdata <- subset(data, State == "MD")
length(sdat)
length(sdata)
sdata2 <- subset(sdata, sdata[,11] != "Not Available")
length(sdata2)
rankhospital("MD", "heart attack", 40)
rankhospital("MD", "heart attack", 41)
sdata2 <- matrix(subset(sdata, sdata[,11] != "Not Available"))
length(sdata2)
View(sdata2)
View(sdata)
sdata2 <- subset(sdata, sdata[,11] != "Not Available")
View(sdata2)
View(sdata)
nrow(sdata2)
rankhospital <- function(state, outcome, num) {
threshold <- "Not Available"
#checks valid state
st <- state.abb
if(!state %in% st) stop ("invalid state")
state
#checks valid outcome
out <-c("heart attack", "heart failure", "pneumonia")
if(!outcome %in% out) stop ("invalid outcome")
outcome
#read data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
#subset data by user entered state
sdata <- subset(data, State == state)
if(outcome == "heart attack") {
colname = "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
}
if(outcome == "heart failure") {
colname = "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"
}
if(outcome == "pneumonia") {
colname = "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"
}
#remove not available rows from column pertaining to user entered outcome
sdata <- subset(sdata, sdata[,colname] != threshold)
#first order the data by the outcome input by the user, if there are ties
#in outcome values then sort by the 2-column (Hospital.Name alphabetically)
ordersdata <- sdata[order(as.numeric(sdata[,colname]), sdata[,2]),]
#print(length(ordersdata))
if(num == "best") {
num <- 1
}
if(num == "worst") {
num <- as.numeric(nrow(ordersdata))
print(num)
}
if(num > nrow(ordersdata)) {
NA
}
rank <- ordersdata[num,2]
rank
}
rankhospital("MD", "heart attack", "worst")
rankhospital <- function(state, outcome, num) {
threshold <- "Not Available"
#checks valid state
st <- state.abb
if(!state %in% st) stop ("invalid state")
state
#checks valid outcome
out <-c("heart attack", "heart failure", "pneumonia")
if(!outcome %in% out) stop ("invalid outcome")
outcome
#read data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
#subset data by user entered state
sdata <- subset(data, State == state)
if(outcome == "heart attack") {
colname = "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
}
if(outcome == "heart failure") {
colname = "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"
}
if(outcome == "pneumonia") {
colname = "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"
}
#remove not available rows from column pertaining to user entered outcome
sdata <- subset(sdata, sdata[,colname] != threshold)
#first order the data by the outcome input by the user, if there are ties
#in outcome values then sort by the 2-column (Hospital.Name alphabetically)
ordersdata <- sdata[order(as.numeric(sdata[,colname]), sdata[,2]),]
if(num == "best") {
num <- 1
}
if(num == "worst") {
num <- as.numeric(nrow(ordersdata))
}
if(num > nrow(ordersdata)) {
NA
}
rank <- ordersdata[num,2]
rank
}
rankhospital("MD", "heart attack", "worst")
submit
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
5
submit()
submit()
submit()
state.ab
state.abb
state.abb[3]
state.abb[50]
rankall <- function(outcome, num = "best") {
#checks valid outcome
out <-c("heart attack", "heart failure", "pneumonia")
if(!outcome %in% out) stop ("invalid outcome")
outcome
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
rank <- matrix()
for(i in 50) {
threshold <- "Not Available"
state <- state.abb[i]
sdata <- subset(data, State == state)
if(outcome == "heart attack") {
colname = "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
}
if(outcome == "heart failure") {
colname = "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"
}
if(outcome == "pneumonia") {
colname = "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"
}
sdata <- subset(sdata, sdata[,colname] != threshold)
ordersdata <- sdata[order(as.numeric(sdata[,colname]), sdata[,2]),]
if(num == "best") {
num <- 1
}
if(num == "worst") {
num <- as.numeric(nrow(ordersdata))
}
if(num > nrow(ordersdata)) {
NA
}
rank <- rbind(rank, ordersdata[num,c(2,7)])
}
rank
}
rankall("heart attack", 4)
?rbind
View(sdata2)
View(sdata)
sdata2 <- sdata[order(as.numeric(sdata[,17]), sdata[,2]),]
View(sdata2)
sdata2[5,c(2,7)]
rank<-matrix()
rbind(rank, sdata2[5,c(2,7)])
rank<-data.frame()
rbind(rank, sdata2[5,c(2,7)])
rankall <- function(outcome, num = "best") {
#checks valid outcome
out <-c("heart attack", "heart failure", "pneumonia")
if(!outcome %in% out) stop ("invalid outcome")
outcome
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
if(outcome == "heart attack") {
colname = "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
}
if(outcome == "heart failure") {
colname = "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"
}
if(outcome == "pneumonia") {
colname = "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"
}
rank <- data.frame()
for(i in 50) {
threshold <- "Not Available"
state <- state.abb[i]
sdata <- subset(data, State == state)
sdata <- subset(sdata, sdata[,colname] != threshold)
ordersdata <- sdata[order(as.numeric(sdata[,colname]), sdata[,2]),]
if(num == "best") {
num <- 1
}
if(num == "worst") {
num <- as.numeric(nrow(ordersdata))
}
if(num > nrow(ordersdata)) {
NA
}
rank <- rbind(rank, ordersdata[num,c(2,7)])
}
rank
}
rankall("heart failure", 5)
rankall <- function(outcome, num = "best") {
#checks valid outcome
out <-c("heart attack", "heart failure", "pneumonia")
if(!outcome %in% out) stop ("invalid outcome")
outcome
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
if(outcome == "heart attack") {
colname = "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
}
if(outcome == "heart failure") {
colname = "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"
}
if(outcome == "pneumonia") {
colname = "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"
}
rank <- data.frame()
for(i in 50) {
threshold <- "Not Available"
state <- state.abb[i]
sdata <- subset(data, State == state)
sdata <- subset(sdata, sdata[,colname] != threshold)
ordersdata <- sdata[order(as.numeric(sdata[,colname]), sdata[,2]),]
if(num == "best") {
num <- 1
}
if(num == "worst") {
num <- as.numeric(nrow(ordersdata))
}
if(num > nrow(ordersdata)) {
NA
}
rank <- rbind(rank, ordersdata[num,c(2,7)])
rank
}
#rank
}
rankall("heart failure", 5)
rankall <- function(outcome, num = "best") {
#checks valid outcome
out <-c("heart attack", "heart failure", "pneumonia")
if(!outcome %in% out) stop ("invalid outcome")
outcome
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
if(outcome == "heart attack") {
colname = "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
}
if(outcome == "heart failure") {
colname = "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"
}
if(outcome == "pneumonia") {
colname = "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"
}
rank <- data.frame()
for(i in 50) {
threshold <- "Not Available"
state <- state.abb[i]
sdata <- subset(data, State == state)
sdata <- subset(sdata, sdata[,colname] != threshold)
ordersdata <- sdata[order(as.numeric(sdata[,colname]), sdata[,2]),]
if(num == "best") {
num <- 1
}
if(num == "worst") {
num <- as.numeric(nrow(ordersdata))
}
if(num > nrow(ordersdata)) {
NA
}
rank <- rbind(rank, ordersdata[num,c(2,7)])
print(i)
}
rank
}
rankall("heart failure", 5)
rankall <- function(outcome, num = "best") {
#checks valid outcome
out <-c("heart attack", "heart failure", "pneumonia")
if(!outcome %in% out) stop ("invalid outcome")
outcome
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
if(outcome == "heart attack") {
colname = "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
}
if(outcome == "heart failure") {
colname = "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"
}
if(outcome == "pneumonia") {
colname = "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"
}
rank <- data.frame()
for(i in 1:50) {
threshold <- "Not Available"
state <- state.abb[i]
sdata <- subset(data, State == state)
sdata <- subset(sdata, sdata[,colname] != threshold)
ordersdata <- sdata[order(as.numeric(sdata[,colname]), sdata[,2]),]
if(num == "best") {
num <- 1
}
if(num == "worst") {
num <- as.numeric(nrow(ordersdata))
}
if(num > nrow(ordersdata)) {
NA
}
rank <- rbind(rank, ordersdata[num,c(2,7)])
print(i)
}
rank
}
rankall("heart failure", 5)
rankall <- function(outcome, num = "best") {
#checks valid outcome
out <-c("heart attack", "heart failure", "pneumonia")
if(!outcome %in% out) stop ("invalid outcome")
outcome
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
if(outcome == "heart attack") {
colname = "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
}
if(outcome == "heart failure") {
colname = "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"
}
if(outcome == "pneumonia") {
colname = "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"
}
rank <- data.frame()
for(i in 1:50) {
threshold <- "Not Available"
state <- state.abb[i]
sdata <- subset(data, State == state)
sdata <- subset(sdata, sdata[,colname] != threshold)
ordersdata <- sdata[order(as.numeric(sdata[,colname]), sdata[,2]),]
if(num == "best") {
num <- 1
}
if(num == "worst") {
num <- as.numeric(nrow(ordersdata))
}
if(num > nrow(ordersdata)) {
NA
}
rank <- rbind(rank, ordersdata[num,c(2,7)])
}
rank
}
rankall("heart failure", 5)
submit()
?data.frame
rankall <- function(outcome, num = "best") {
#checks valid outcome
out <-c("heart attack", "heart failure", "pneumonia")
if(!outcome %in% out) stop ("invalid outcome")
outcome
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
if(outcome == "heart attack") {
colname = "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
}
if(outcome == "heart failure") {
colname = "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"
}
if(outcome == "pneumonia") {
colname = "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"
}
rank <- data.frame()
for(i in 1:50) {
threshold <- "Not Available"
state <- state.abb[i]
sdata <- subset(data, State == state)
sdata <- subset(sdata, sdata[,colname] != threshold)
ordersdata <- sdata[order(as.numeric(sdata[,colname]), sdata[,2]),]
if(num == "best") {
num <- 1
}
if(num == "worst") {
num <- as.numeric(nrow(ordersdata))
}
if(num > nrow(ordersdata)) {
NA
}
rank <- rbind(rank, ordersdata[num,c(2,7)])
}
colnames(rank) <- c("hospital", "state")
rank
}
submit()
9
submit()
submit()
submit()
rankall <- function(outcome, num = "best") {
#checks valid outcome
out <-c("heart attack", "heart failure", "pneumonia")
if(!outcome %in% out) stop ("invalid outcome")
outcome
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
if(outcome == "heart attack") {
colname = "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
}
if(outcome == "heart failure") {
colname = "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"
}
if(outcome == "pneumonia") {
colname = "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"
}
rank <- data.frame()
for(i in 1:50) {
threshold <- "Not Available"
state <- state.abb[i]
sdata <- subset(data, State == state)
sdata <- subset(sdata, sdata[,colname] != threshold)
ordersdata <- sdata[order(as.numeric(sdata[,colname]), sdata[,2]),]
if(num == "best") {
num <- 1
}
if(num == "worst") {
num <- as.numeric(nrow(ordersdata))
print(num)
}
if(num > nrow(ordersdata)) {
NA
}
rank <- rbind(rank, ordersdata[num,c(2,7)])
}
colnames(rank) <- c("hospital", "state")
rank
}
submit()
rankall("pneumonia", "worst")
rankall <- function(outcome, num = "best") {
#checks valid outcome
out <-c("heart attack", "heart failure", "pneumonia")
if(!outcome %in% out) stop ("invalid outcome")
outcome
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
if(outcome == "heart attack") {
colname = "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
}
if(outcome == "heart failure") {
colname = "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"
}
if(outcome == "pneumonia") {
colname = "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"
}
rank <- data.frame()
for(i in 1:50) {
threshold <- "Not Available"
state <- state.abb[i]
sdata <- subset(data, State == state)
sdata <- subset(sdata, sdata[,colname] != threshold)
ordersdata <- sdata[order(as.numeric(sdata[,colname]), sdata[,2]),]
if(num == "best") {
num2 <- 1
}
if(num == "worst") {
num2 <- as.numeric(nrow(ordersdata))
}
if(num > nrow(ordersdata)) {
NA
}
rank <- rbind(rank, ordersdata[num2,c(2,7)])
}
colnames(rank) <- c("hospital", "state")
rank
}
rankall("pneumonia", "worst")
submit()
rankall("pneumonia", "worst")
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
